<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>PyEpoc: Package PyEpoc</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<!-- Generated by Doxygen 1.6.2 -->
<script type="text/javascript">
<!--
function changeDisplayState (e){
  var num=this.id.replace(/[^[0-9]/g,'');
  var button=this.firstChild;
  var sectionDiv=document.getElementById('dynsection'+num);
  if (sectionDiv.style.display=='none'||sectionDiv.style.display==''){
    sectionDiv.style.display='block';
    button.src='open.gif';
  }else{
    sectionDiv.style.display='none';
    button.src='closed.gif';
  }
}
function initDynSections(){
  var divs=document.getElementsByTagName('div');
  var sectionCounter=1;
  for(var i=0;i<divs.length-1;i++){
    if(divs[i].className=='dynheader'&&divs[i+1].className=='dynsection'){
      var header=divs[i];
      var section=divs[i+1];
      var button=header.firstChild;
      if (button!='IMG'){
        divs[i].insertBefore(document.createTextNode(' '),divs[i].firstChild);
        button=document.createElement('img');
        divs[i].insertBefore(button,divs[i].firstChild);
      }
      header.style.cursor='pointer';
      header.onclick=changeDisplayState;
      header.id='dynheader'+sectionCounter;
      button.src='closed.gif';
      section.id='dynsection'+sectionCounter;
      section.style.display='none';
      section.style.marginLeft='14px';
      sectionCounter++;
    }
  }
}
window.onload = initDynSections;
-->
</script>
<div class="navigation" id="top">
  <div class="tabs">
    <ul>
      <li><a href="index.htm"><span>Main&nbsp;Page</span></a></li>
      <li><a href="pages.htm"><span>Related&nbsp;Pages</span></a></li>
      <li class="current"><a href="namespaces.htm"><span>Packages</span></a></li>
      <li><a href="annotated.htm"><span>Classes</span></a></li>
    </ul>
  </div>
  <div class="tabs">
    <ul>
      <li><a href="namespaces.htm"><span>Packages</span></a></li>
      <li><a href="namespacemembers.htm"><span>Package&nbsp;Functions</span></a></li>
    </ul>
  </div>
</div>
<div class="contents">
<h1>Package PyEpoc</h1>
<p>This is a Python wrapper for Emotiv's dynamic link libraries.  
<a href="#_details">More...</a></p>
<table border="0" cellpadding="0" cellspacing="0">
<tr><td colspan="2"><h2>Classes</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_py_epoc_1_1_epoc_handler.htm">EpocHandler</a></td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">The wrapper class.  <a href="class_py_epoc_1_1_epoc_handler.htm#_details">More...</a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_py_epoc_1_1_input_sensor_descriptor.htm">InputSensorDescriptor</a></td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Input sensor description struct.  <a href="class_py_epoc_1_1_input_sensor_descriptor.htm#_details">More...</a><br/></td></tr>
<tr><td colspan="2"><h2>Variables</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">dictionary&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespace_py_epoc.htm#a35d06f6fbfbde1da9252d7d47656fd5d">AFFECTIVALGO</a></td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Affectiv Algorithms.  <a href="#a35d06f6fbfbde1da9252d7d47656fd5d"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">dictionary&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespace_py_epoc.htm#a21e7bfe47f71883231796af4cf8566d2">COGACTION</a></td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Cognitiv Actions.  <a href="#a21e7bfe47f71883231796af4cf8566d2"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">dictionary&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespace_py_epoc.htm#adeba2dfee83697462f61aef1f95f815c">COGEVENT</a></td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Cognitiv Events.  <a href="#adeba2dfee83697462f61aef1f95f815c"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">dictionary&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespace_py_epoc.htm#aa3efe779d35b43eb7e681c289c2f3c1c">COGTRAININGCONTROL</a></td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Cognitiv Training Control.  <a href="#aa3efe779d35b43eb7e681c289c2f3c1c"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">dictionary&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespace_py_epoc.htm#a483b592c5c7b267c840da223400e34ed">CONTACTQUALITY</a></td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">EEG Sensor Contact Quality.  <a href="#a483b592c5c7b267c840da223400e34ed"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">dictionary&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespace_py_epoc.htm#afc011832c875e7e34ab0437f20ee06cb">ERRCODE</a></td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Emotiv Engine's Return Codes.  <a href="#afc011832c875e7e34ab0437f20ee06cb"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">dictionary&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespace_py_epoc.htm#a36ab5af76cc5def4563ec311f089665a">EVENT</a></td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Emotiv Events.  <a href="#a36ab5af76cc5def4563ec311f089665a"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">dictionary&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespace_py_epoc.htm#a1acfdc751ad4772cf2afc37ea1102538">EXPEVENT</a></td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Expressiv Events.  <a href="#a1acfdc751ad4772cf2afc37ea1102538"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">dictionary&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespace_py_epoc.htm#afa5fdd34c0271f73f41d933590f7bb01">EXPRESSIVALGO</a></td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Expressiv Facial Expression.  <a href="#afa5fdd34c0271f73f41d933590f7bb01"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">dictionary&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespace_py_epoc.htm#a0301226aec786e89ba1d030e8fbadcb2">EXPRSIGNATURE</a></td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Expressiv Signature.  <a href="#a0301226aec786e89ba1d030e8fbadcb2"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">dictionary&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespace_py_epoc.htm#a15c693515d99ad223eb85b960891328b">EXPRTHRESHOLD</a></td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Expressiv Threshold.  <a href="#a15c693515d99ad223eb85b960891328b"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">dictionary&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespace_py_epoc.htm#af1666e8009f2be3812e1eb8007b7e6f4">EXPRTRAININGCONTROL</a></td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Expressiv Training Control.  <a href="#af1666e8009f2be3812e1eb8007b7e6f4"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">dictionary&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespace_py_epoc.htm#abbb04e7788f2c405c173ed5ee82df869">INPUTCHANNELS</a></td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Input Channels.  <a href="#abbb04e7788f2c405c173ed5ee82df869"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">dictionary&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespace_py_epoc.htm#ad7fc85eb9d192da2d612cf5bb6d7de95">SIGNALSTRENGTH</a></td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Wireless Signal Strength.  <a href="#ad7fc85eb9d192da2d612cf5bb6d7de95"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">dictionary&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespace_py_epoc.htm#a628d63af1db40e933bd033f8bd39c42a">SUITE</a></td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Emotiv Detection Suites.  <a href="#a628d63af1db40e933bd033f8bd39c42a"></a><br/></td></tr>
</table>
<hr/><a name="_details"></a><h2>Detailed Description</h2>
<p>This is a Python wrapper for Emotiv's dynamic link libraries. </p>
<hr/><h2>Variable Documentation</h2>
<a class="anchor" id="a35d06f6fbfbde1da9252d7d47656fd5d"></a><!-- doxytag: member="PyEpoc::AFFECTIVALGO" ref="a35d06f6fbfbde1da9252d7d47656fd5d" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">dictionary <a class="el" href="namespace_py_epoc.htm#a35d06f6fbfbde1da9252d7d47656fd5d">PyEpoc.AFFECTIVALGO</a></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Affectiv Algorithms. </p>
<p>This dictionary contains the affectiv emotional types.</p>
<p>AFF_EXCITEMENT : <b>0x0001</b> <br/>
 AFF_MEDITATION : <b>0x0002</b> <br/>
 AFF_FRUSTRATION : <b>0x0004</b> <br/>
 AFF_ENGAGEMENT_BOREDOM : <b>0x0008</b> <br/>
 </p>
<dl class="see"><dt><b>See also:</b></dt><dd>EE_AffectivAlgo_enum (EmoStateDLL.h) </dd></dl>

</div>
</div>
<a class="anchor" id="a21e7bfe47f71883231796af4cf8566d2"></a><!-- doxytag: member="PyEpoc::COGACTION" ref="a21e7bfe47f71883231796af4cf8566d2" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">dictionary <a class="el" href="namespace_py_epoc.htm#a21e7bfe47f71883231796af4cf8566d2">PyEpoc.COGACTION</a></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Cognitiv Actions. </p>
<p>Cognitiv action types.</p>
<p>COG_NEUTRAL : <b>0x0001</b> <br/>
 COG_PUSH : <b>0x0002</b> <br/>
 COG_PULL : <b>0x0004</b> <br/>
 COG_LIFT : <b>0x0008</b> <br/>
 COG_DROP : <b>0x0010</b> <br/>
 COG_LEFT : <b>0x0020</b> <br/>
 COG_RIGHT : <b>0x0040</b> <br/>
 COG_ROTATE_LEFT : <b>0x0080</b> <br/>
 COG_ROTATE_RIGHT : <b>0x0100</b> <br/>
 COG_ROTATE_CLOCKWISE : <b>0x0200</b> <br/>
 COG_ROTATE_COUNTER_CLOCKWISE : <b>0x0400</b> <br/>
 COG_ROTATE_FORWARDS : <b>0x0800</b> <br/>
 COG_ROTATE_REVERSE : <b>0x1000</b> <br/>
 COG_DISAPPEAR : <b>0x2000</b> <br/>
 </p>
<dl class="see"><dt><b>See also:</b></dt><dd>EE_CognitivAction_enum (EmoStateDLL.h) </dd></dl>

</div>
</div>
<a class="anchor" id="adeba2dfee83697462f61aef1f95f815c"></a><!-- doxytag: member="PyEpoc::COGEVENT" ref="adeba2dfee83697462f61aef1f95f815c" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">dictionary <a class="el" href="namespace_py_epoc.htm#adeba2dfee83697462f61aef1f95f815c">PyEpoc.COGEVENT</a></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Cognitiv Events. </p>
<p>Cognitiv-specific event types.</p>
<p>EE_CognitivNoEvent : <b>0</b> <br/>
 EE_CognitivTrainingStarted : <b>1</b> <br/>
 EE_CognitivTrainingSucceeded : <b>2</b> <br/>
 EE_CognitivTrainingFailed : <b>3</b> <br/>
 EE_CognitivTrainingCompleted : <b>4</b> <br/>
 EE_CognitivTrainingDataErased : <b>5</b> <br/>
 EE_CognitivTrainingRejected : <b>6</b> <br/>
 EE_CognitivTrainingReset : <b>7</b> <br/>
 EE_CognitivAutoSamplingNeutralCompleted : <b>8</b> <br/>
 EE_CognitivSignatureUpdated : <b>9</b> <br/>
 </p>
<dl class="see"><dt><b>See also:</b></dt><dd>EE_CognitivEvent_enum (edk.h) </dd></dl>

</div>
</div>
<a class="anchor" id="aa3efe779d35b43eb7e681c289c2f3c1c"></a><!-- doxytag: member="PyEpoc::COGTRAININGCONTROL" ref="aa3efe779d35b43eb7e681c289c2f3c1c" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">dictionary <a class="el" href="namespace_py_epoc.htm#aa3efe779d35b43eb7e681c289c2f3c1c">PyEpoc.COGTRAININGCONTROL</a></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Cognitiv Training Control. </p>
<p>Cognitiv Suite training controls.</p>
<p>COG_NONE : <b>0</b> <br/>
 COG_START : <b>1</b> <br/>
 COG_ACCEPT : <b>2</b> <br/>
 COG_REJECT : <b>3</b> <br/>
 COG_ERASE : <b>4</b> <br/>
 COG_RESET : <b>5</b> <br/>
 </p>
<dl class="see"><dt><b>See also:</b></dt><dd>EE_CognitivTrainingControl_enum (edk.h) </dd></dl>

</div>
</div>
<a class="anchor" id="a483b592c5c7b267c840da223400e34ed"></a><!-- doxytag: member="PyEpoc::CONTACTQUALITY" ref="a483b592c5c7b267c840da223400e34ed" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">dictionary <a class="el" href="namespace_py_epoc.htm#a483b592c5c7b267c840da223400e34ed">PyEpoc.CONTACTQUALITY</a></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>EEG Sensor Contact Quality. </p>
<p>EEG Electrode Contact Quality enumeration. Used to characterize the EEG signal reception or electrode contact for a sensor on the headset.</p>
<p>EEG_CQ_NO_SIGNAL : <b>0</b> <br/>
 EEG_CQ_VERY_BAD : <b>1</b> <br/>
 EEG_CQ_POOR : <b>3</b> <br/>
 EEG_CQ_FAIR : <b>4</b> <br/>
 EEG_CQ_GOOD : <b>5</b> <br/>
 </p>
<dl class="note"><dt><b>Note:</b></dt><dd>This differs from the wireless signal strength (<a class="el" href="namespace_py_epoc.htm#ad7fc85eb9d192da2d612cf5bb6d7de95" title="Wireless Signal Strength.">SIGNALSTRENGTH</a>), which refers to the radio communication between the headset transmitter and USB dongle receiver. </dd></dl>
<dl class="see"><dt><b>See also:</b></dt><dd>EE_EEG_ContactQuality_enum (EmoStateDLL.h) </dd></dl>

</div>
</div>
<a class="anchor" id="afc011832c875e7e34ab0437f20ee06cb"></a><!-- doxytag: member="PyEpoc::ERRCODE" ref="afc011832c875e7e34ab0437f20ee06cb" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">dictionary <a class="el" href="namespace_py_epoc.htm#afc011832c875e7e34ab0437f20ee06cb">PyEpoc.ERRCODE</a></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Emotiv Engine's Return Codes. </p>
<p>This dictionary contains the EmoEngine return codes.</p>
<p>EDK_OK : <b>0x0000</b> <br/>
 EDK_UNKNOWN_ERROR : <b>0x0001</b> <br/>
 EDK_INVALID_PROFILE_ARCHIVE : <b>0x0101</b> <br/>
 EDK_NO_USER_FOR_BASEPROFILE : <b>0x0102</b> <br/>
 EDK_CANNOT_ACQUIRE_DATA : <b>0x0200</b> <br/>
 EDK_BUFFER_TOO_SMALL : <b>0x0300</b> <br/>
 EDK_OUT_OF_RANGE : <b>0x0301</b> <br/>
 EDK_INVALID_PARAMETER : <b>0x0302</b> <br/>
 EDK_PARAMETER_LOCKED : <b>0x0303</b> <br/>
 EDK_COG_INVALID_TRAINING_ACTION : <b>0x0304</b> <br/>
 EDK_COG_INVALID_TRAINING_CONTROL : <b>0x0305</b> <br/>
 EDK_COG_INVALID_ACTIVE_ACTION : <b>0x0306</b> <br/>
 EDK_COG_EXCESS_MAX_ACTIONS : <b>0x0307</b> <br/>
 EDK_EXP_NO_SIG_AVAILABLE : <b>0x0308</b> <br/>
 EDK_FILESYSTEM_ERROR : <b>0x0309</b> <br/>
 EDK_INVALID_USER_ID : <b>0x0400</b> <br/>
 EDK_EMOENGINE_UNINITIALIZED : <b>0x0500</b> <br/>
 EDK_EMOENGINE_DISCONNECTED : <b>0x0501</b> <br/>
 EDK_EMOENGINE_PROXY_ERROR : <b>0x0502</b> <br/>
 EDK_NO_EVENT : <b>0x0600</b> <br/>
 EDK_GYRO_NOT_CALIBRATED : <b>0x0700</b> <br/>
 EDK_OPTIMIZATION_IS_ON : <b>0x0800</b> <br/>
 EDK_RESERVED1 : <b>0x0900</b> <br/>
 </p>
<dl class="see"><dt><b>See also:</b></dt><dd>edkErrorCode.h </dd></dl>

</div>
</div>
<a class="anchor" id="a36ab5af76cc5def4563ec311f089665a"></a><!-- doxytag: member="PyEpoc::EVENT" ref="a36ab5af76cc5def4563ec311f089665a" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">dictionary <a class="el" href="namespace_py_epoc.htm#a36ab5af76cc5def4563ec311f089665a">PyEpoc.EVENT</a></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Emotiv Events. </p>
<p>This dictionary contains EmoEngine event types.</p>
<p>EE_UnknownEvent : <b>0x0000</b> <br/>
 EE_EmulatorError : <b>0x0001</b> <br/>
 EE_ReservedEvent : <b>0x0002</b> <br/>
 EE_UserAdded : <b>0x0010</b> <br/>
 EE_UserRemoved : <b>0x0020</b> <br/>
 EE_EmoStateUpdated : <b>0x0040</b> <br/>
 EE_ProfileEvent : <b>0x0080</b> <br/>
 EE_CognitivEvent : <b>0x0100</b> <br/>
 EE_ExpressivEvent : <b>0x0200</b> <br/>
 EE_InternalStateChanged : <b>0x0400</b> <br/>
 </p>
<dl class="see"><dt><b>See also:</b></dt><dd>EE_Event_enum (edk.h) </dd></dl>

</div>
</div>
<a class="anchor" id="a1acfdc751ad4772cf2afc37ea1102538"></a><!-- doxytag: member="PyEpoc::EXPEVENT" ref="a1acfdc751ad4772cf2afc37ea1102538" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">dictionary <a class="el" href="namespace_py_epoc.htm#a1acfdc751ad4772cf2afc37ea1102538">PyEpoc.EXPEVENT</a></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Expressiv Events. </p>
<p>Expressiv specific event types.</p>
<p>EE_ExpressivNoEvent : <b>0</b> <br/>
 EE_ExpressivTrainingStarted : <b>1</b> <br/>
 EE_ExpressivTrainingSucceeded : <b>2</b> <br/>
 EE_ExpressivTrainingFailed : <b>3</b> <br/>
 EE_ExpressivTrainingCompleted : <b>4</b> <br/>
 EE_ExpressivTrainingDataErased : <b>5</b> <br/>
 EE_ExpressivTrainingRejected : <b>6</b> <br/>
 EE_ExpressivTrainingReset : <b>7</b> <br/>
 </p>
<dl class="see"><dt><b>See also:</b></dt><dd>EE_ExpressivEvent_enum (edk.h) </dd></dl>

</div>
</div>
<a class="anchor" id="afa5fdd34c0271f73f41d933590f7bb01"></a><!-- doxytag: member="PyEpoc::EXPRESSIVALGO" ref="afa5fdd34c0271f73f41d933590f7bb01" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">dictionary <a class="el" href="namespace_py_epoc.htm#afa5fdd34c0271f73f41d933590f7bb01">PyEpoc.EXPRESSIVALGO</a></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Expressiv Facial Expression. </p>
<p>This dictionary contains the expressiv facial expression types.</p>
<p>EXP_NEUTRAL : <b>0x0001</b> <br/>
 EXP_BLINK : <b>0x0002</b> <br/>
 EXP_WINK_LEFT : <b>0x0004</b> <br/>
 EXP_WINK_RIGHT : <b>0x0008</b> <br/>
 EXP_HORIEYE : <b>0x0010</b> <br/>
 EXP_EYEBROW : <b>0x0020</b> <br/>
 EXP_FURROW : <b>0x0040</b> <br/>
 EXP_SMILE : <b>0x0080</b> <br/>
 EXP_CLENCH : <b>0x0100</b> <br/>
 EXP_LAUGH : <b>0x0200</b> <br/>
 EXP_SMIRK_LEFT : <b>0x0400</b> <br/>
 EXP_SMIRK_RIGHT : <b>0x0800</b> <br/>
 </p>
<dl class="see"><dt><b>See also:</b></dt><dd>EE_ExpressivAlgo_enum (EmoStateDLL.h) </dd></dl>

</div>
</div>
<a class="anchor" id="a0301226aec786e89ba1d030e8fbadcb2"></a><!-- doxytag: member="PyEpoc::EXPRSIGNATURE" ref="a0301226aec786e89ba1d030e8fbadcb2" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">dictionary <a class="el" href="namespace_py_epoc.htm#a0301226aec786e89ba1d030e8fbadcb2">PyEpoc.EXPRSIGNATURE</a></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Expressiv Signature. </p>
<p>Expressiv Suite signature types.</p>
<p>EXP_SIG_UNIVERSAL : <b>0</b> <br/>
 EXP_SIG_TRAINED : <b>1</b> <br/>
 </p>
<dl class="see"><dt><b>See also:</b></dt><dd>EE_ExpressivSignature_enum (edk.h) </dd></dl>

</div>
</div>
<a class="anchor" id="a15c693515d99ad223eb85b960891328b"></a><!-- doxytag: member="PyEpoc::EXPRTHRESHOLD" ref="a15c693515d99ad223eb85b960891328b" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">dictionary <a class="el" href="namespace_py_epoc.htm#a15c693515d99ad223eb85b960891328b">PyEpoc.EXPRTHRESHOLD</a></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Expressiv Threshold. </p>
<p>Expressiv Suite sensitivity threshold.</p>
<p>EXP_SENSITIVITY : <b>0</b> <br/>
 </p>
<dl class="see"><dt><b>See also:</b></dt><dd>EE_ExpressivThreshold_enum (edk.h) </dd></dl>

</div>
</div>
<a class="anchor" id="af1666e8009f2be3812e1eb8007b7e6f4"></a><!-- doxytag: member="PyEpoc::EXPRTRAININGCONTROL" ref="af1666e8009f2be3812e1eb8007b7e6f4" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">dictionary <a class="el" href="namespace_py_epoc.htm#af1666e8009f2be3812e1eb8007b7e6f4">PyEpoc.EXPRTRAININGCONTROL</a></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Expressiv Training Control. </p>
<p>Expressiv Suite training controls.</p>
<p>EXP_NONE : <b>0</b> <br/>
 EXP_START : <b>1</b> <br/>
 EXP_ACCEPT : <b>2</b> <br/>
 EXP_REJECT : <b>3</b> <br/>
 EXP_ERASE : <b>4</b> <br/>
 EXP_RESET : <b>5</b> <br/>
 </p>
<dl class="see"><dt><b>See also:</b></dt><dd>EE_ExpressivTrainingControl_enum (edk.h) </dd></dl>

</div>
</div>
<a class="anchor" id="abbb04e7788f2c405c173ed5ee82df869"></a><!-- doxytag: member="PyEpoc::INPUTCHANNELS" ref="abbb04e7788f2c405c173ed5ee82df869" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">dictionary <a class="el" href="namespace_py_epoc.htm#abbb04e7788f2c405c173ed5ee82df869">PyEpoc.INPUTCHANNELS</a></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Input Channels. </p>
<p>Headset Input Channels.</p>
<p>EE_CHAN_CMS : <b>0</b> <br/>
 EE_CHAN_DRL : <b>1</b> <br/>
 EE_CHAN_FP1 : <b>2</b> <br/>
 EE_CHAN_AF3 : <b>3</b> <br/>
 EE_CHAN_F7 : <b>4</b> <br/>
 EE_CHAN_F3 : <b>5</b> <br/>
 EE_CHAN_FC5 : <b>6</b> <br/>
 EE_CHAN_T7 : <b>7</b> <br/>
 EE_CHAN_P7 : <b>8</b> <br/>
 EE_CHAN_O1 : <b>9</b> <br/>
 EE_CHAN_O2 : <b>10</b> <br/>
 EE_CHAN_P8 : <b>11</b> <br/>
 EE_CHAN_T8 : <b>12</b> <br/>
 EE_CHAN_FC6 : <b>13</b> <br/>
 EE_CHAN_F4 : <b>14</b> <br/>
 EE_CHAN_F8 : <b>15</b> <br/>
 EE_CHAN_AF4 : <b>16</b> <br/>
 EE_CHAN_FP2 : <b>17</b> <br/>
 </p>
<dl class="see"><dt><b>See also:</b></dt><dd>EE_InputChannels_enum (EmoStateDLL.h) </dd></dl>

</div>
</div>
<a class="anchor" id="ad7fc85eb9d192da2d612cf5bb6d7de95"></a><!-- doxytag: member="PyEpoc::SIGNALSTRENGTH" ref="ad7fc85eb9d192da2d612cf5bb6d7de95" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">dictionary <a class="el" href="namespace_py_epoc.htm#ad7fc85eb9d192da2d612cf5bb6d7de95">PyEpoc.SIGNALSTRENGTH</a></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Wireless Signal Strength. </p>
<p>This dictionary contains the wireless signal strength levels.</p>
<p>NO_SIGNAL : <b>0</b> <br/>
 BAD_SIGNAL : <b>1</b> <br/>
 GOOD_SIGNAL : <b>2</b> <br/>
 </p>
<dl class="see"><dt><b>See also:</b></dt><dd>EE_SignalStrength_enum (EmoStateDLL.h) </dd></dl>

</div>
</div>
<a class="anchor" id="a628d63af1db40e933bd033f8bd39c42a"></a><!-- doxytag: member="PyEpoc::SUITE" ref="a628d63af1db40e933bd033f8bd39c42a" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">dictionary <a class="el" href="namespace_py_epoc.htm#a628d63af1db40e933bd033f8bd39c42a">PyEpoc.SUITE</a></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Emotiv Detection Suites. </p>
<p>This dictionary contains the detection suite types.</p>
<p>EE_EXPRESSIV : <b>0</b> <br/>
 EE_AFFECTIV : <b>1</b> <br/>
 EE_COGNITIV : <b>2</b> <br/>
 </p>
<dl class="see"><dt><b>See also:</b></dt><dd>EE_EmotivSuite_enum (EmoStateDLL.h) </dd></dl>

</div>
</div>
</div>
<hr size="1"/><address style="text-align: right;"><small>Generated on Sun Apr 4 05:39:07 2010 for PyEpoc by&nbsp;
<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.6.2 </small></address>
</body>
</html>
